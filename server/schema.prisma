generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model monsters {
  id               Int               @id
  name             String
  size_id          Int
  type_id          Int
  alignment        String
  armor_class      Int
  armor_desc       String
  challenge_rating Float
  hit_points       Int
  hit_dice         String
  sizes            sizes             @relation(fields: [size_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  types            types             @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  monsters_senses  monsters_senses[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sizes {
  id       Int        @id
  size     String
  monsters monsters[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model types {
  id       Int        @id
  type     String
  monsters monsters[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model monsters_senses {
  sense_id   Int
  monster_id Int
  value      String
  monsters   monsters @relation(fields: [monster_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "monster_id")
  senses     senses   @relation(fields: [sense_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sense_id")

  @@id([sense_id, monster_id], map: "monster_sense")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model senses {
  id              Int               @id
  sense           String
  monsters_senses monsters_senses[]
}
